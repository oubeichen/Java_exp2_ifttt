/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package oubeichen;

import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import weibo4j.Oauth;
import weibo4j.model.WeiboException;
import weibo4j.util.BareBonesBrowserLaunch;

/**
 * 新建或者修改任务时弹出的窗口类
 * @author oubeichen
 */
public class NewTaskDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewTaskDialog
     */
    public NewTaskDialog(java.awt.Frame parent, boolean modal, String title) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //居中显示
        /*设置一些控件的默认属性，防止出问题*/
        //ThisDateText = null;
        //ThisDateText = new JTextField("hgaha");
        this.setTitle(title);
        TitleLabel.setText(title);
        ThisTimePanel.setVisible(true);
        ThisMailPanel.setVisible(false);
        TaskNameText.setText("任务" + tasknum + "(到达时间-发邮件)");
        /*开始设置默认时间为当前时间*/
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date nowdate = new Date();
        nowdate.setTime(nowdate.getTime() + 1000 * 60 * 2);//设置为当前时间 + 2分钟
        ThisDateText.setText(sdf.format(nowdate));//设置为date的日期
        sdf.applyPattern("HH:mm");
        ThisTimeText.setText(sdf.format(nowdate));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleLabel = new javax.swing.JLabel();
        TaskNameLabel = new javax.swing.JLabel();
        ThisPanel = new javax.swing.JPanel();
        ThisComboBox = new javax.swing.JComboBox();
        ThisTimePanel = new javax.swing.JPanel();
        ThisTimeLabel = new javax.swing.JLabel();
        ThisDateLabel = new javax.swing.JLabel();
        ThisDateText = new javax.swing.JTextField();
        ThisTimeText = new javax.swing.JFormattedTextField();
        ThisMailPanel = new javax.swing.JPanel();
        ThisPassText = new javax.swing.JPasswordField();
        ThisAccLabel = new javax.swing.JLabel();
        ThisPassLabel = new javax.swing.JLabel();
        ThisAccText = new javax.swing.JFormattedTextField(new EmailFormatter());
        ThatPanel = new javax.swing.JPanel();
        ThatComboBox = new javax.swing.JComboBox();
        ThatMailPanel = new javax.swing.JPanel();
        ThatAccLabel = new javax.swing.JLabel();
        ThatAccText = new javax.swing.JFormattedTextField(new EmailFormatter());
        ThatContentScroll = new javax.swing.JScrollPane();
        ThatContentText = new javax.swing.JTextArea();
        ThatPassLabel1 = new javax.swing.JLabel();
        IfLabel = new javax.swing.JLabel();
        ThenLabel = new javax.swing.JLabel();
        TaskNameText = new javax.swing.JTextField();
        CancelButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("新建任务");

        TaskNameLabel.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        TaskNameLabel.setText("任务名称：");

        ThisPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "This", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14))); // NOI18N
        ThisPanel.setPreferredSize(new java.awt.Dimension(241, 253));

        ThisComboBox.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        ThisComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "时钟", "邮件" }));
        ThisComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ThisComboBoxItemStateChanged(evt);
            }
        });

        ThisTimeLabel.setText("时间：");

        ThisDateLabel.setText("日期：");

        DateChooser dateChooser1 = DateChooser.getInstance("yyyy-MM-dd");
        dateChooser1.register(ThisDateText);
        ThisDateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ThisDateTextKeyPressed(evt);
            }
        });

        try {
            ThisTimeText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new TimeFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ThisTimeText.setText("12:00");
        ThisTimeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ThisTimeTextKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ThisTimePanelLayout = new javax.swing.GroupLayout(ThisTimePanel);
        ThisTimePanel.setLayout(ThisTimePanelLayout);
        ThisTimePanelLayout.setHorizontalGroup(
            ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisTimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThisDateLabel)
                    .addComponent(ThisTimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThisTimeText, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(ThisDateText))
                .addContainerGap())
        );
        ThisTimePanelLayout.setVerticalGroup(
            ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisTimePanelLayout.createSequentialGroup()
                .addGroup(ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThisDateLabel)
                    .addComponent(ThisDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ThisTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThisTimeLabel)
                    .addComponent(ThisTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        ThisPassText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ThisPassTextKeyReleased(evt);
            }
        });

        ThisAccLabel.setText("邮箱账号：");

        ThisPassLabel.setText("密码：");

        ThisAccText.setText("oubeichen@126.com");
        ThisAccText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ThisAccTextKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ThisMailPanelLayout = new javax.swing.GroupLayout(ThisMailPanel);
        ThisMailPanel.setLayout(ThisMailPanelLayout);
        ThisMailPanelLayout.setHorizontalGroup(
            ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisMailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThisPassLabel)
                    .addComponent(ThisAccLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ThisAccText, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(ThisPassText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ThisMailPanelLayout.setVerticalGroup(
            ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisMailPanelLayout.createSequentialGroup()
                .addGroup(ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThisAccLabel)
                    .addComponent(ThisAccText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ThisMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThisPassLabel)
                    .addComponent(ThisPassText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ThisPanelLayout = new javax.swing.GroupLayout(ThisPanel);
        ThisPanel.setLayout(ThisPanelLayout);
        ThisPanelLayout.setHorizontalGroup(
            ThisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ThisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ThisPanelLayout.createSequentialGroup()
                        .addComponent(ThisComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ThisTimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ThisMailPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ThisPanelLayout.setVerticalGroup(
            ThisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThisPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ThisComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ThisTimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThisMailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ThatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "That", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14))); // NOI18N
        ThatPanel.setPreferredSize(new java.awt.Dimension(241, 253));

        ThatComboBox.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        ThatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "邮件", "微博" }));
        ThatComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ThatComboBoxItemStateChanged(evt);
            }
        });

        ThatAccLabel.setText("目标邮箱：");

        ThatAccText.setText("diamondwave@qq.com");
        ThatAccText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ThatAccTextKeyPressed(evt);
            }
        });

        ThatContentScroll.setPreferredSize(new java.awt.Dimension(21, 21));

        ThatContentText.setColumns(20);
        ThatContentText.setRows(5);
        ThatContentText.setText("这是一个测试。");
        ThatContentText.setPreferredSize(new java.awt.Dimension(21, 21));
        ThatContentScroll.setViewportView(ThatContentText);

        ThatPassLabel1.setText("内容：");

        javax.swing.GroupLayout ThatMailPanelLayout = new javax.swing.GroupLayout(ThatMailPanel);
        ThatMailPanel.setLayout(ThatMailPanelLayout);
        ThatMailPanelLayout.setHorizontalGroup(
            ThatMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThatMailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ThatMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ThatMailPanelLayout.createSequentialGroup()
                        .addComponent(ThatPassLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ThatContentScroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ThatMailPanelLayout.createSequentialGroup()
                        .addComponent(ThatAccLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ThatAccText, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ThatMailPanelLayout.setVerticalGroup(
            ThatMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThatMailPanelLayout.createSequentialGroup()
                .addGroup(ThatMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThatAccLabel)
                    .addComponent(ThatAccText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ThatMailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThatContentScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThatPassLabel1))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ThatPanelLayout = new javax.swing.GroupLayout(ThatPanel);
        ThatPanel.setLayout(ThatPanelLayout);
        ThatPanelLayout.setHorizontalGroup(
            ThatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ThatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ThatPanelLayout.createSequentialGroup()
                        .addComponent(ThatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ThatMailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ThatPanelLayout.setVerticalGroup(
            ThatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ThatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ThatMailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        IfLabel.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        IfLabel.setText("IF");

        ThenLabel.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        ThenLabel.setText("Then");

        TaskNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TaskNameTextKeyPressed(evt);
            }
        });

        CancelButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        CancelButton.setText("取消");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        OKButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        OKButton.setText("确定");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(IfLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ThisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ThenLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ThatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TaskNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(TaskNameText))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(OKButton)
                        .addGap(18, 18, 18)
                        .addComponent(CancelButton)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TaskNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TaskNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(ThatPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IfLabel)
                            .addComponent(ThenLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(OKButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ThisComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ThisComboBoxItemStateChanged
        // TODO add your handling code here:       
        String Tasktype;//用于设置名称
        if (ThisComboBox.getSelectedIndex() == 0) {
            ThisTimePanel.setVisible(true);
            ThisMailPanel.setVisible(false);
            Tasktype = "到达时间";
        } else {
            ThisTimePanel.setVisible(false);
            ThisMailPanel.setVisible(true);
            Tasktype = "到达邮件";
        }
        String title = TaskNameText.getText();//自动修改标题
        if (title.contains("(") && title.substring(title.lastIndexOf("(")).contains(")")
                && title.substring(title.lastIndexOf("("), title.lastIndexOf(")")).contains("-"))//正则表达式在有中文的字符串中不正常，不得已放弃
        {
            title = title.substring(0, title.lastIndexOf("(")) + "(" + Tasktype + title.substring(title.lastIndexOf("-"));//字符短，不考虑性能
            TaskNameText.setText(title);
        }
    }//GEN-LAST:event_ThisComboBoxItemStateChanged
    
    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        onOK();
    }//GEN-LAST:event_OKButtonActionPerformed
    
    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed
    
    private void ThatComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ThatComboBoxItemStateChanged
        // TODO add your handling code here:
        String Tasktype;//用于设置名称
        if (ThatComboBox.getSelectedIndex() == 0) {
            ThatAccLabel.setText("目标邮箱：");
            ThatAccText.setFormatterFactory(new DefaultFormatterFactory(new EmailFormatter()));
            ThatAccText.setText("diamondwave@qq.com");
            Tasktype = "发邮件";
        } else {
            ThatAccLabel.setText("目标微博：");
            ThatAccText.setFormatterFactory(null);
            ThatAccText.setText("weibo1");
            Tasktype = "发微博";
        }
        String title = TaskNameText.getText();//自动修改标题
        if (title.contains("(") && title.substring(title.lastIndexOf("(")).contains(")")
                && title.substring(title.lastIndexOf("("), title.lastIndexOf(")")).contains("-"))//正则表达式在有中文的字符串中不正常，不得已放弃
        {
            title = title.substring(0, title.lastIndexOf("-")) + "-" + Tasktype + title.substring(title.lastIndexOf(")"));//字符短，不考虑性能
            TaskNameText.setText(title);
        }
    }//GEN-LAST:event_ThatComboBoxItemStateChanged
    
    private void TaskNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TaskNameTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_TaskNameTextKeyPressed
    
    private void ThisDateTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ThisDateTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_ThisDateTextKeyPressed
    
    private void ThisTimeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ThisTimeTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_ThisTimeTextKeyPressed
    
    private void ThisAccTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ThisAccTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_ThisAccTextKeyPressed
    
    private void ThisPassTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ThisPassTextKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_ThisPassTextKeyReleased
    
    private void ThatAccTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ThatAccTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_ThatAccTextKeyPressed
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            onOK();
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                NewTaskDialog dialog = new NewTaskDialog(new javax.swing.JFrame(), true, "title");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public class EmailFormatter extends AbstractFormatter {
        
        @Override
        public Object stringToValue(String string) throws ParseException {
            Matcher matcher = regexp.matcher(string);
            if (matcher.matches()) {
                return string;//邮箱格式正确则保持不动
            }
            //return "@";//邮箱格式错误则初始化为只有一个@
            throw new ParseException("Not an email", 0);
        }
        
        @Override
        public String valueToString(Object value) throws ParseException {
            return (String) value;
        }
        final private Pattern regexp = Pattern.compile("\\w+(\\.\\w+)*@\\w+(\\.\\w+)+");//判断是否为邮箱
    }
    
    public class TimeFormatter extends MaskFormatter {
        
        private TimeFormatter(String string) throws ParseException {
            super("##:##");
        }
        
        @Override
        public Object stringToValue(String string) throws ParseException {
            String newstring = (String) super.stringToValue(string);
            /*int hh = Integer.parseInt(newstring.split(":")[0]),mm = Integer.parseInt(newstring.split(":")[1]);
             if(hh >= 0 && hh <=23 && mm >= 0 && mm <= 59)//小时0~23，分钟0~59
             {
             return newstring;
             }*/
            Pattern regexp = Pattern.compile(("^([0-1][0-9]|[2][0-3]):([0-5][0-9])$"));
            Matcher matcher = regexp.matcher(newstring);
            if (matcher.matches()) {
                return newstring;
            }
            throw new ParseException("Not an valid time", 0);
            //return "12:00";
        }
    }

    //settask函数，用于初始化赋值
    public void settask(Task task) {
        tsk = new Task(task);
        TaskNameText.setText(tsk.taskname);
        ThisComboBox.setSelectedIndex(tsk.thisindex);
        if (ThisComboBox.getSelectedIndex() == 0) {//时间
            ThisDateText.setText(tsk.thisstring1);
            ThisTimeText.setText(tsk.thisstring2);
        } else {//邮箱，若扩展则将else改成其他
            ThisAccText.setText(tsk.thisstring1);
            ThisPassText.setText(tsk.thisstring2);
        }
        ThatComboBox.setSelectedIndex(tsk.thatindex);
        ThatAccText.setText(tsk.thatstring1);//邮箱、微博均一样
        ThatContentText.setText(tsk.thatstring2);//邮箱微博均一样
    }

    //gettask系列函数，用于主窗口取出修改后的结果
    public Task gettask() {
        return tsk;
    }

    //检查输入
    private boolean checkInput() {
        String temp;
        Matcher matcher;
        Pattern regexp;
        if ("".equals(TaskNameText.getText())) {//标题未输入
            return false;
        }
        if (ThisComboBox.getSelectedIndex() == 0) {
            temp = ThisDateText.getText();//检查日期
            regexp = Pattern.compile(("^([0-9]{4})-([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])$"));
            matcher = regexp.matcher(temp);
            if (!matcher.matches()) {
                //javax.swing.JOptionPane.showMessageDialog(this, "输入日期有误！", "输入错误", javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;
            }
            temp = ThisTimeText.getText();//检查时间
            regexp = Pattern.compile(("^([0-1][0-9]|[2][0-3]):([0-5][0-9])$"));
            matcher = regexp.matcher(temp);
            if (!matcher.matches()) {
                return false;
            }
        } else {
            temp = ThisAccText.getText();//检查邮箱
            regexp = Pattern.compile(("\\w+(\\.\\w+)*@\\w+(\\.\\w+)+"));
            matcher = regexp.matcher(temp);
            if (!matcher.matches()) {
                return false;
            }
            if ("".equals(String.valueOf(ThisPassText.getPassword()))) {//返回的是char
                return false;
            }
        }
        if (ThatComboBox.getSelectedIndex() == 0)//邮箱
        {
            temp = ThatAccText.getText();//检查邮箱
            regexp = Pattern.compile(("\\w+(\\.\\w+)*@\\w+(\\.\\w+)+"));
            matcher = regexp.matcher(temp);
            if (!matcher.matches()) {
                return false;
            }
        }
        temp = ThatAccText.getText();
        if ("".equals(temp)) {//再次判断是否为空
            return false;
        }
        temp = ThatContentText.getText();//邮箱微博均一样
        if ("".equals(temp)) {
            return false;
        }
        return true;
    }
    
    private void onOK() {
        if (checkInput() == false) {
            javax.swing.JOptionPane.showMessageDialog(this, "请正确填写所有的项目！", "输入错误", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        tsk.taskname = TaskNameText.getText();
        tsk.thisindex = ThisComboBox.getSelectedIndex();
        if (ThisComboBox.getSelectedIndex() == 0) {//时间
            tsk.thisstring1 = ThisDateText.getText();
            tsk.thisstring2 = ThisTimeText.getText();
        } else {//邮箱，若扩展则将else改成其他
            tsk.thisstring1 = ThisAccText.getText();
            tsk.thisstring2 = String.valueOf(ThisPassText.getPassword());//返回的是char
        }
        tsk.thatindex = ThatComboBox.getSelectedIndex();
        tsk.thatstring1 = ThatAccText.getText();//邮箱、微博均一样
        tsk.thatstring2 = ThatContentText.getText();//邮箱微博均一样
        //开始判断微博、授权微博
        if(tsk.thatindex == 1)
        {
            if(!setWeibo()){
                return;
            }
        }
        
        OK = true;//让调用的函数知道选择了OK。
        tasknum++;
        dispose();
    }
    public boolean setWeibo()
    {
        Properties props = new Properties();
        try {
            props.load(new FileInputStream("weiboauth.properties"));
        } catch (Exception ex) {
            Logger.getLogger(NewTaskDialog.class.getName()).log(Level.SEVERE, null, ex);
            javax.swing.JOptionPane.showMessageDialog(this, "读取weiboauth.properties失败！", "文件读写失败", javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
        String Access_token;
        if (props.getProperty(tsk.thatstring1) == null) {
            Oauth oauth = new Oauth();
            try {
                BareBonesBrowserLaunch.openURL(oauth.authorize("code", "", ""));
            } catch (WeiboException e) {
            }
            if (javax.swing.JOptionPane.showConfirmDialog(this, "你的微博尚未授权\n请在弹出的网页中登陆、授权，等到网页中显示成功后再点击确认", "操作确认", javax.swing.JOptionPane.OK_CANCEL_OPTION) == javax.swing.JOptionPane.CANCEL_OPTION) {
                return false;
            }
            String code = Getpage.getPage("http://oubeichen.com/oauth.txt");
            code = code.substring(0, code.length() - 2);//去掉最后一个换行
            try {
                Access_token = oauth.getAccessTokenByCode(code).toString().split("accessToken=")[1].split(",")[0];
                System.out.print(code);
            } catch (WeiboException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "授权失败，请检查网络！", "授权失败", javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;
            }
            
            props.setProperty(tsk.thatstring1, Access_token);
            try {
                props.store(new FileOutputStream("weiboauth.properties"), "微博验证\n格式：<用户名> = <AccessToken>");
            } catch (IOException ex) {
                javax.swing.JOptionPane.showMessageDialog(this, "写入weiboauth.properties失败！", "文件读写失败", javax.swing.JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(NewTaskDialog.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }
        }
        return true;
    }
    
    public boolean OK = false;
    private Task tsk = new Task();
    public static int tasknum = 1;//用于自增任务数
    String defaultMailUser,defaultMailPass;//默认的邮箱账号密码
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JLabel IfLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JLabel TaskNameLabel;
    private javax.swing.JTextField TaskNameText;
    private javax.swing.JLabel ThatAccLabel;
    private javax.swing.JFormattedTextField ThatAccText;
    private javax.swing.JComboBox ThatComboBox;
    private javax.swing.JScrollPane ThatContentScroll;
    private javax.swing.JTextArea ThatContentText;
    private javax.swing.JPanel ThatMailPanel;
    private javax.swing.JPanel ThatPanel;
    private javax.swing.JLabel ThatPassLabel1;
    private javax.swing.JLabel ThenLabel;
    private javax.swing.JLabel ThisAccLabel;
    private javax.swing.JFormattedTextField ThisAccText;
    private javax.swing.JComboBox ThisComboBox;
    private javax.swing.JLabel ThisDateLabel;
    private javax.swing.JTextField ThisDateText;
    private javax.swing.JPanel ThisMailPanel;
    private javax.swing.JPanel ThisPanel;
    private javax.swing.JLabel ThisPassLabel;
    private javax.swing.JPasswordField ThisPassText;
    private javax.swing.JLabel ThisTimeLabel;
    private javax.swing.JPanel ThisTimePanel;
    private javax.swing.JFormattedTextField ThisTimeText;
    private javax.swing.JLabel TitleLabel;
    // End of variables declaration//GEN-END:variables
}
